name: Create Release Tag

on:
  push:
    branches: [ main ]
    paths:
      - 'build.gradle.kts'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.DEV_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.DEV_AUTOMATION_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Extract version from build.gradle.kts
        id: version
        run: |
          VERSION=$(grep '^version = ' build.gradle.kts | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"

      - name: Check if tag exists
        id: tag_check
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} already exists, skipping release"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} does not exist, will create release"
          fi

      - name: Set up JDK
        if: steps.tag_check.outputs.exists == 'false'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build project
        if: steps.tag_check.outputs.exists == 'false'
        run: ./gradlew build

      - name: Create and push tag
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          git config user.name "dev-automation-app[bot]"
          git config user.email "dev-automation-app[bot]@users.noreply.github.com"
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
