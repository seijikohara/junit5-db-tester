import net.ltgt.gradle.errorprone.errorprone

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    // ErrorProne plugin for static analysis
    alias(libs.plugins.errorprone)
    // Spotless plugin for code formatting
    alias(libs.plugins.spotless)
}

dependencies {
    // DBUnit for database testing
    api(libs.dbunit)

    // JUnit Jupiter API for extensions
    api(libs.junit.jupiter.api)

    // JSpecify for null safety annotations
    api(libs.jspecify)

    // Apache POI for Excel file processing
    api(libs.poi)
    api(libs.poi.ooxml)

    // Lombok for reducing boilerplate code
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)

    // ErrorProne and NullAway for static analysis
    errorprone(libs.errorprone.core)
    errorprone(libs.nullaway)
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.13.4")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    // Configure source and javadoc jars for publishing
    withSourcesJar()
    withJavadocJar()
}

// Configure ErrorProne and NullAway
tasks.withType<JavaCompile>().configureEach {
    options.errorprone {
        option("NullAway:AnnotatedPackages", "com.github.seijikohara.junit5dbtester")
        option("NullAway:JSpecifyMode", "true")
        option("NullAway:TreatGeneratedAsUnannotated", "true")
        option("NullAway:CheckOptionalEmptiness", "true")
        option("NullAway:SuggestSuppressions", "true")
        error("NullAway")
    }
}

// Configure Spotless for code formatting
spotless {
    java {
        target("src/**/*.java")

        // Use Google Java Format
        googleJavaFormat()

        // Additional formatting options
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }

    kotlinGradle {
        ktlint()
        trimTrailingWhitespace()
        endWithNewline()
    }
}
